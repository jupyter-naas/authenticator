name: Upload Python Package

on:
  push:
    tags:
      - '*'
      
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: "Test and Deploy version on Pypip"
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python3 -m pip install -U pip
          python3 -m pip install --upgrade pip
          pip3 install --use-feature=2020-resolver -e '.[dev]'
      - name: Run tests and linters
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          python3 -m black naasauthenticator
          python3 -m flake8 naasauthenticator
          # pytest --cov=./naasauthenticator --cov-report=xml 
      - name: Upload coverage to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build package
        run: python3 setup.py sdist
      - name: Deploy Pypi
        uses: remorses/pypi@v3
        with:
          username: ${{ secrets.PYPIP_USERNAME }} 
          password: ${{ secrets.PYPIP_PASSWORD }}
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ steps.get-latest-tag.outputs.tag }}
          regex: '^\d*\.\d*\.\d*$'
      - name: Checkout Target Repository
        if: ${{ steps.regex-match.outputs.match != '' }}
        uses: actions/checkout@v2
        with:
          repository: jupyter-naas/lab
          path: naas_lab
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 
      - run: echo ${{ steps.get-latest-tag.outputs.tag }}
      - name: Update lab file
        if: ${{ steps.regex-match.outputs.match != '' }}  
        run: sed -i 's_AUTH_VERSION .*$_AUTH_VERSION ${{ steps.get-latest-tag.outputs.tag }}_' naas_lab/Dockerfile
      - name: Setup github user
        if: ${{ steps.regex-match.outputs.match != '' }}
        run: git config --global user.name "actions-user" && git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Push lab file
        if: ${{ steps.regex-match.outputs.match != '' }}
        run: 'cd naas_lab && git add setup.py && git commit -m "chore: update authenticator ${{ steps.get-latest-tag.outputs.tag }}" && git push'
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: jupyter-naas/lab
          event-type: pypip-deployed
          client-payload: '{"ref": "${{ github.ref }}"}'
